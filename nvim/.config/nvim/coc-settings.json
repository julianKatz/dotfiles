{
  "languageserver": {
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh", ".bats"],
      "ignoredRootPaths": ["~"]
    },
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    }
  },

  "go.goplsOptions": {
    "usePlaceholders": true
  },
  "go.checkForUpdates": "ask",
    // More than git-gutter and delve
  "diagnostic.signPriority": 12,

  "signature.enable": true,
  "signature.preferShownAbove": false,

  "coc.preferences.formatOnSaveFiletypes": [
    "go"
  ],

  // adjust the references preview window height
  "list.maxPreviewHeight": 30,

  "list.source.symbols.excludes": ["vendor/**"],

  // Doesn't seem to be working
  "codeLens.enable": true,

  // Make jumps try to go to open tabs
  // "coc.preferences.jumpCommand": "drop",

  // Make "v" the vsplit command in CocList
  "list.normalMappings": {
    "v": "action:vsplit"
  },

  // ---- DIAGNOSTIC INFO ---- //

  // Adds errors inline next to code in red
  "diagnostic.virtualText": false,
  "diagnostic.virtualTextPrefix": "      ",
  "diagnostic.virtualTextLineSeparator": " \\ ",

  // Show the virtual window with the error
  "diagnostic.enableMessage": "always",
  "diagnostic.messageTarget": "float",
  "diagnostic.enableSign": true,
  "diagnostic.errorSign": "\u2717" ,
  "diagnostic.warningSign": "\u26A0",
  "diagnostic.format": "%message => %source",
  "diagnostic.messageDelay": 100,
  // "diagnostic.checkCurrentLine": true,

  // makes the completion automatically select the first completed item
  "suggest.noselect": false,
  "suggest.defaultSortMethod": "alphabetical",
  "suggest.enablePreview": true,
  "suggest.floatEnable": true,

  "suggest.completionItemKindLabels": {
		"keyword": "\uf1de",
		"variable": "\ue79b",
		"value": "\uf89f",
		"operator": "\u03a8",
		"function": "\u0192",
		"reference": "\ufa46",
		"constant": "\uf8fe",
		"method": "\uf09a",
		"struct": "\ufb44",
		"class": "\uf0e8",
		"interface": "\uf417",
		"text": "\ue612",
		"enum": "\uf435",
		"enumMember": "\uf02b",
		"module": "\uf40d",
		"color": "\ue22b",
		"property": "\ue624",
		"field": "\uf9be",
		"unit": "\uf475",
		"event": "\ufacd",
		"file": "\uf723",
		"folder": "\uf114",
		"snippet": "\ue60b",
		"typeParameter": "\uf728",
		"default": "\uf29c"
	},

  "markdownlint.config": {
    "line_length": false
  },

  // none of this appears to do anything...
  // see https://github.com/meatwallace/dotfiles/issues/129
  "diagnostic-languageserver.filetypes": {
    // lint `sh` (includes `bash`) files
    "sh": "shellcheck",
    "bats": "shellcheck"
  },
  "diagnostic-languageserver.formatFiletypes": {
    // format `sh` (includes `bash`) files using formatter defined below
    "sh": "shfmt",
    "bats": "shfmt"
  },
  "diagnostic-languageserver.formatters": {
    // define our formatter so that we can reference it from
    // `diagnostic-languageserver.formatFiletypes`
    "shfmt": {
      "command": "shfmt",
      // all the below args are entirely optional
      // primarily listed here to call out that flags which take an
      // argument (such as `-i <num-spaces>` for specifying indentation)
      // should be split into two strings, the flag and then the value
      "args": ["-i", "2", "-bn", "-ci", "-sr"]
    }
  },


  // coc-snippets
  "snippets.priority": 99
}
